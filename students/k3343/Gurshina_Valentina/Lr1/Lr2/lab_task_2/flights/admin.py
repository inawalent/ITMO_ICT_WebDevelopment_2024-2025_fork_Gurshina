from django.contrib import admin
from django.urls import reverse
from django.utils import timezone
from django.utils.safestring import mark_safe

# Register your models here.

admin.site.site_title = "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏"
admin.site.site_header = "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–∏"

# –ê–í–ò–ê–ö–û–ú–ü–ê–ù–ò–Ø

from .models import Airline

@admin.register(Airline)
class AirlineAdmin(admin.ModelAdmin):
    list_display = ("name", "get_count_of_flights")
    search_fields = ("name",)
    readonly_fields = ("get_flights",)

    @admin.display(description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Å–æ–≤")
    def get_count_of_flights(self, obj):
        return f"{obj.flights.count()}"

    @admin.display(description="–†–µ–π—Å—ã")
    def get_flights(self, obj):
        formatted_flights = []

        for flight in obj.flights.select_related("airline").all():
            flight_url = reverse(f"admin:{flight._meta.app_label}_{flight._meta.model_name}_change", args=(flight.pk,))
            #–≤—Å—Ç–∞–≤–∏–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ–π—Å–æ–≤; –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç - —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω.
            type_ = flight.get_type_display()
            gate = flight.gate
            date = timezone.localtime(flight.date)

            formatted_flights.append(
                f"<a href='{flight_url}'>{type_}, {gate} - {date.strftime('%d.%m.%y %H:%M')}</a>"
            )

        return mark_safe("<br>".join(formatted_flights)) #—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–≥
    # –ø–æ–º–µ—Ç–∏–º —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –∫–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π (mark_safe), –ø–æ—Å–∫–æ–ª—å–∫—É Django –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑–±–µ–≥–∞–µ—Ç HTML —Ç—ç–≥–æ–≤.

    from django.contrib import admin
from django.urls import reverse
from django.utils.safestring import mark_safe

# –†–ï–ô–°

from .models import Flight

@admin.register(Flight)
class FlightAdmin(admin.ModelAdmin):
    list_display = ("airline", "type", "gate", "date")
    search_fields = ("airline__name",)
    list_filter = ["airline", "type", "gate"]
    readonly_fields = ("get_bookings",)

    @admin.display(description="–ë—Ä–æ–Ω–∏")
    def get_bookings(self, obj): #–ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–æ–Ω–µ–π –Ω–∞ —Ä–µ–π—Å
        formatted_bookings = []

        for booking in obj.bookings.select_related("user").all():
            booking_url = reverse(
                f"admin:{booking._meta.app_label}_{booking._meta.model_name}_change", args=(booking.pk,)
            )
            user_full_name = f"{booking.user.last_name} {booking.user.first_name}"
            user_username = booking.user.username
            user = f"<a href='{booking_url}'>{user_full_name if user_full_name != ' ' else user_username}</a>"
            registered = "ü•≥" if booking.registered else "üò≠"
            ticket = str(booking.ticket) if booking.ticket else "üíÄ"

            formatted_bookings.append(f"{user} ({registered}{', ' + ticket if ticket else 'üíÄ'})")

        return mark_safe("<br>".join(formatted_bookings))
    
# –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï

from .models import Booking

@admin.register(Booking)
class BookingAdmin(admin.ModelAdmin):
    list_display = ("get_user", "get_airline", "get_type", "get_gate", "get_date", "registered", "ticket")
    search_fields = ("user__last_name", "user__first_name", "flight__airline")
    list_filter = ["flight__airline", "flight__type", "flight__gate", "registered"]
    list_editable = ("registered", "ticket")

    @admin.display(ordering="user__last_name", description="–ü–∞—Å—Å–∞–∂–∏—Ä")
    def get_user(self, obj):
        full_name = f"{obj.user.last_name} {obj.user.first_name}"
        return full_name if full_name != " " else obj.user.username

    @admin.display(ordering="flight__airline", description="–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è")
    def get_airline(self, obj):
        return obj.flight.airline

    @admin.display(ordering="flight__type", description="–¢–∏–ø")
    def get_type(self, obj):
        return obj.flight.get_type_display()

    @admin.display(ordering="flight__gate", description="–í—ã—Ö–æ–¥ –Ω–∞ –ø–æ—Å–∞–¥–∫—É")
    def get_gate(self, obj):
        return obj.flight.gate

    @admin.display(ordering="flight__date", description="–î–∞—Ç–∞ –ø–æ–ª–µ—Ç–∞")
    def get_date(self, obj):
        return obj.flight.date
    
# –û–¢–ó–´–í / –û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨

from .models import Feedback

@admin.register(Feedback)
class FeedbackAdmin(admin.ModelAdmin):
    list_display = ("get_user", "get_airline", "get_type", "get_gate", "get_date", "text", "rating", "date")
    search_fields = ("user__last_name", "user__first_name", "flight__airline")
    list_filter = ["flight__airline", "flight__type", "flight__gate", "rating"]

    @admin.display(ordering="user__last_name", description="–ü–∞—Å—Å–∞–∂–∏—Ä")
    def get_user(self, obj):
        return f"{obj.user.last_name} {obj.user.first_name}"

    @admin.display(ordering="flight__airline", description="–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è")
    def get_airline(self, obj):
        return obj.flight.airline

    @admin.display(ordering="flight__type", description="–¢–∏–ø")
    def get_type(self, obj):
        return obj.flight.get_type_display()

    @admin.display(ordering="flight__gate", description="–í—ã—Ö–æ–¥ –Ω–∞ –ø–æ—Å–∞–¥–∫—É")
    def get_gate(self, obj):
        return obj.flight.gate

    @admin.display(ordering="flight__date", description="–î–∞—Ç–∞ –ø–æ–ª–µ—Ç–∞")
    def get_date(self, obj):
        return obj.flight.date



    



